# Some useful aliases.


alias ss="ps -aux"
alias news="xterm -g 80x45 -e trn -e -S1 -N &"

alias c="clear"
alias m="more"
alias j="jobs"

# common misspellings
alias mroe=more
alias pdw=pwd

hash -p /usr/bin/mail mail

if [ -z "$HOST" ] ; then
	export HOST=${HOSTNAME}
fi

HISTIGNORE="[   ]*:&:bg:fg"

psgrep()
{
	ps -aux | grep $1 | grep -v grep
}

#
# This is a little like `zap' from Kernighan and Pike
#

pskill()
{
	local pid

	pid=$(ps -ax | grep $1 | grep -v grep | awk '{ print $1 }')
	echo -n "killing $1 (process $pid)..."
	kill -9 $pid
	echo "slaughtered."
}

term()
{
        TERM=$1
	export TERM
	tset
}

xtitle () 
{ 
	echo -n -e "\033]0;$*\007"
}

cd()
{
	builtin cd "$@" && xtitle $HOST: $PWD
}

bold()
{
	tput smso
}

unbold()
{
	tput rmso
}

if [ -f /unix ] ; then
clear()
{
	tput clear
}
fi

rot13()
{
	if [ $# = 0 ] ; then
		tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]"
	else
		tr "[a-m][n-z][A-M][N-Z]" "[n-z][a-m][N-Z][A-M]" < $1
	fi
}

watch()
{
        if [ $# -ne 1 ] ; then
                tail -f nohup.out
        else
                tail -f $1
        fi
}

#
#       Remote login passing all 8 bits (so meta key will work)
#
rl()
{
        rlogin $* -8
}

function setenv()
{
	if [ $# -ne 2 ] ; then
		echo "setenv: Too few arguments"
	else
		export $1="$2"
	fi
}

function chmog()
{
	if [ $# -ne 4 ] ; then
		echo "usage: chmog mode owner group file"
		return 1
	else
		chmod $1 $4
		chown $2 $4
		chgrp $3 $4
	fi
}




alias l="ls -l "
alias lt='ls -Falt'
alias ls='ls -F' 
alias ll="ls -l"
alias ls="ls -F"
alias la="ls -a"
alias lp="ls *?.py" #List all python programs if they're named properly
alias lsh="ls *?.sh" #Same thing but for bash, by properly I mean with suffix .sh or .py
alias dir='ls -ba --color=auto'
alias listpermissions="ls -l | awk '{print \$1 , \$9}'"

alias texclean='rm -f *.toc *.aux *.log *.cp *.fn *.tp *.vr *.pg *.ky'




alias ss="ps -aux"
alias j='jobs -l'


alias news="xterm -g 80x45 -e trn -e -S1 -N &"

alias c="clear"

alias m="more"

alias h='history'
alias pu="pushd"
alias po="popd"

alias clean='echo -n "Really clean this directory?";
	read yorn;
	if test "$yorn" = "y"; then
	   rm -f \#* *~ .*~ *.bak .*.bak  *.tmp .*.tmp core a.out;
	   echo "Cleaned.";
	else
	   echo "Not cleaned.";
	fi'
#
# Csh compatability:
#
alias unsetenv=unset
function setenv () {
  export $1="$2"
}

# Function which adds an alias to the current shell and to
# the ~/.bash_aliases file.
add-alias ()
{
   local name=$1 value="$2"
   echo alias $name=\'$value\' >>~/.bash_aliases
   eval alias $name=\'$value\'
   alias $name
}

# "repeat" command.  Like:
#
#	repeat 10 echo foo
repeat ()
{ 
    local count="$1" i;
    shift;
    for i in $(_seq 1 "$count");
    do
        eval "$@";
    done
}

# Subfunction needed by `repeat'.
_seq ()
{ 
    local lower upper output;
    lower=$1 upper=$2;

    if [ $lower -ge $upper ]; then return; fi
    while [ $lower -lt $upper ];
    do
	echo -n "$lower "
        lower=$(($lower + 1))
    done
    echo "$lower"
}
# 
#
#
hiddenfiles(){
  if [[ $1 = '-r' ]]; then 

ls .[a-zA-Z0-9_]*
else


	history | awk '{print $2}' | sort | uniq -c | sort -rn | head 2>/dev/null

ls -d .[!.]?*
fi 
}

wiki() {
    search_term="${1}"
    lynx https://wiki.archlinux.org/index.php?search=${search_term}
}
alias _='sudo'
alias _i='sudo -i'
alias bin='cd bin'
alias c='clear'
alias dd='dd status=progress'
alias e='exit'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias gethw='(printf "\nCPU\n\n"; lscpu; printf "\nMEMORY\n\n"; free -h; printf "\nDISKS\n\n"; lsblk; printf "\nPCI\n\n"; lspci; printf "\nUSB\n\n"; lsusb; printf "\nNETWORK\n\n"; ifconfig) | less'
alias grep='grep --color=auto'
alias listperm='ls -l | awk '\''{print $1 , $9}'\'''
alias makepyexec='chmod +x *?.py'
alias makeshexec='chmod +x *?.sh'
alias movemusic='mv *?.mp3 ~/Music'
alias public='cd public_html'
alias vdir='vdir --color=auto'
function aptsearch()
{
sudo apt search $1 | awk '{print $1}' | awk -F/ '{print $1}'| less 
}

